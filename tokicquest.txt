// 解きながら学ぶC言語 2004/11/18 初版問題文

q1.1
整数値15と37の和を計算して、その値である52を表示するプログラムを書け。

q1.2
整数値15から37を引いた値を計算して、「15から37を引いた値は-22です」
と表示せよ。

q1.3
風林火山を縦に表示せよ。ただし、printfの呼び出しは1回のみ使うこと。

q1.4
実行結果
もしもし。
こんにちは。

それでは。      と、左のように表示せよ。printf呼び出しは1回のみとする。

q1.5
実行結果
警報！！警報！！    と表示して、警報も鳴るようにせよ。

q1.6
整数を格納するint型の変数に任意の値を格納し、その値を表示せよ。

q1.7
実行結果
noの値を入力してください：32
noの値は32となっています。      と、整数値を変数に格納し値を表示せよ。

q1.8
実行結果
整数を入力してください：57
その値に10を加えると67です。    と、表示するアプリを作成せよ。

q1.9
実行結果
整数を入力してください：57
その値から10を現ずると47です。  と、表示するアプリを作れ。

q1.10
風林火山を縦に表示せよ。ただしputsを使うこと。

q1.11
実行結果
2つの値を入力してください。
整数1：27
整数2：35
これらの積は945です。           と、表示するアプリを作れ。

q1.12
実行結果
3つの値を入力してください。
整数1：7
整数2：15
整数3：23
これらの和は45です。    

錬成1
1.1
C言語、と縦に表示せよ。ただし2通りで書く事。

1.2
警報を2回発するアプリを作れ(macターミナルで鳴れば良い)。

1.3
実行結果
こんにちは。

はじめまして。  と、表示せよ。ただし2通りで書く事。

1.4
実行結果
整数を入力してください：57
その和の5倍は285です。    と、整数値を読み込みその5倍の値を表示せよ。

1.5
実行結果
1番目：
2番目：
3番目：     と整数値を読み込んで、それらを掛け合わせた値を表示せよ。

問題
2.1
実行結果
整数を入力してください：157
10を加えると167です。
10を現ずると147です。
10を乗じると1570です。
10で除した商は15です。
10で除した剰余は7です。     と、表示するアプリを作れ。

2.2
実行結果
noの値を入力してください：32
no / 5は6です。
no % 5は2です。             と、表示するアプリを作れ。

2.3
実行結果
2つの整数を入力してください。
整数1：54
整数2：84
Aの値はBの64％です。        と、表示するアプリを作れ。

2.4
実行結果
2つの整数を入力してください。
整数1：54
整数2：84
これらの和は66で積は648です。   と、表示するアプリを作れ。

2.5
実行結果
2つの整数を入力してください。
整数1：54
整数2：84
平均値の符号を反転した値は-42です。     と、表示するアプリを作れ。

2.6
実行結果
実数を入力してください：57.3
あなたは57.300000と入力しましたね。     と、表示するアプリを作れ。

2.7
実行結果
実数を入力してください：57.3
0.1を加えると57.400000
0.1を減ずると57.200000
0.1を乗じると5.730000
0.1を除すと573.000000		と、表示するアプリを作れ。

2.8
実行結果
長さをcmで入力してください：25.4
それは10.000000インチです。		と、表示するアプリを作れ。

2.9
実行結果
整数定数、浮動小数点定数、int型の変数、double型の変数を、
かけたり割ったりして色々な演算を行うコードを書き、
型と演算の規則を確認せよ。

2.10
実行結果
3つの整数を入力してください。
整数1：54
整数2：84
整数3：64
合計は212で平均は69.6です。		と、表示するアプリを作れ。

2.11
実行結果
2つの整数を入力してください。
整数A：54
整数B：84
Aの値はBの値の64.285714％です。		と、表示するアプリを作れ。

2.12
実行結果
身長を入力してください：175
標準体重は67.5です。			と、表示するアプリを作れ。
※標準体重計算式: 身長[m] × 身長[m] × 22

錬成
2.1
実行結果
整数を入力してください：527
最も下の桁は7です。				と、表示するアプリを作れ。

2.2
実行結果
2つの実数を入力してください。
整数A：15.3
整数B：3.7
これらの平均は9.5です。			と、表示するアプリを作れ。

2.3
実行結果
[001234]
[  1234]
[1234  ]
[123.450000]
[123.45]
[  123.45]		と、整数値1234と実数値123.45を
				printfで整形せよ。

問題
3.1
実行結果
整数を入力してください：1535
その数は10の倍数ではありません。	と、表示するアプリ作れ。

3.2
実行結果
2つの整数を入力してください。
整数A：15
整数B：3
BはAの約数です。			と、表示するアプリを作れ。

3.3
整数を入力してください：8
その数は偶数です。			と、表示するアプリを作れ。

3.4
等価演算子や関係演算子が、1あるいは0の値を生成することを確認するアプリを作れ。

3.5
整数を入力してください：-8
絶対値は8です。				と、表示するアプリを作れ。

3.6
実行結果
整数を入力してください：3
ゼロ以外を入力しましたね。		と、0かどうか判定するアプリ作れ。

3.7
実行結果
2つの整数を入力してください。
整数A：15
整数B：3
AはBより大きいです。		と、表示するアプリを作れ。

3.8
実行結果
3つの整数を入力してください。
整数1：54
整数2：84
整数3：64
最小値は54です。			と、表示するアプリを作れ。

3.9
実行結果
4つの整数を入力してください。
整数1：54
整数2：84
整数3：64
整数4：44
最大値は84です。			と、表示するアプリを作れ。

3.10
実行結果
4つの整数を入力してください。
整数1：54
整数2：84
これらの差は6です。			と、表示するアプリを作れ。三項演算子使用。

3.11
前問のコードを、if分で書き換えよ。

3.12
3.8のコードを、条件演算子で書き換えよ。

3.13
実行結果
2つの整数を入力してください。
整数1：82
整数2：34
大きい方の値は82です。
小さい方の値は34です。		と、表示するアプリを作れ。同値にも対応せよ。

3.14
3つの整数を入力してください。
整数1：54
整数2：84
整数3：54
2つの値が等しいです。		と、表示するアプリを作れ。他の場合にも要対応。

3.15
実行結果
4つの整数を入力してください。
整数1：54
整数2：84
それらの差は11以上です。	と、表示するアプリを作れ。10以下にも要対応。

3.16
実行結果
点数を入力してください：83
評価は優です。				と、表示するアプリを作れ。別解あれば尚良い。
							60未満不可、69までは可、79までは良。
				
3.17
3.3のコードをswitch文で書き換えよ。

3.18
実行結果
何月ですか？：5
春です。			と、表示するアプリを作れ。if文で書け。

3.19
3.18のコードをswitch文で書き換えよ。

問題
4.1
整数値を読み込んで、その数が10で割り切れるかどうかを表示するアプリを作れ。
なお表示後に、続けるかどうかの確認も促せ。

4.2
実行結果
非負の整数を入力してください：1963
1963を逆から読むと3691です。	　と、表示のアプリ作れ。例外には再入力。

4.3
実行結果
非負の整数を入力してください：1963
1963は4桁です。					と、表示するアプリ作れ。要例外処理。

4.4
実行結果
正の整数を入力してください：10
1から10まで足した値は55です。	と、表示するアプリを作れ。

4.5
実行結果
2つの整数を入力してください。
整数1：37
整数2：28
28以上37以下の全整数の和は325です。		と、表示するアプリを作れ。

4.6
4.2のコードを、複合代入演算子/=を用いて書き換えよ。

4.7
4.3のコードを、複合代入演算子/=および後置増分演算子++を使って書け。

4.8
実行結果
整数を入力して下さい：11
11 10 9 8 7 6 5 4 3 2 1 0	とカウントダウンするアプリを作れ。
							負の値入力に対しては何も表示せず。

4.9
4.8のコードを元に改造し、0でなく1までのカウントダウンとせよ。

4.10
実行結果
正の整数を入力してください：12
1 2 3 4 5 6 7 8 9 10 11 12	とカウントアップするアプリを作れ。
							負の値入力に対しては何も表示せず。

4.11
実行結果
整数を入力してください：19
2 4 6 8 10 12 14 16 18	と入力以下の正の偶数を昇順表示アプリ。

4.12
実行結果
整数を入力してください：19
2 4 8 16				と入力以下の正の2のべき乗を昇順表示アプリ。

4.13
実行結果
正の整数を入力してください：3
*
*
*						と入力数分だけ*を縦表示。0以下入力表示無。

4.14
実行結果
整数を入力してください。
No.1：35
No.2：28
No.3：9999
合計は63で平均は31.50です。		9999を入力するまで加算が続く。
							9999は合計に加えない。

4.15
4.10をfor文で書き換えよ。

4.16
実行結果
1から5までを足した値は15です。		と、表示せよ。for文で書け。

4.17
実行結果
整数を入力してください：25
1234567890123456789012345	と、入力値分1~0まで繰り返し表示。

4.18
実行結果
何cmから：150
何cmまで：190
何cmごと：5
145cm	46.26jkg
150cm	49.50kg
 ... 以下略 ...		と、q2.12の対応表を表示せよ。
					scanf使用、小数点以下2桁。
		
4.19
実行結果
 1  2  3  4  5
 6  7  8  9  0
  ... 中略 ...
46 47 48 49 50		と、1~50までを5個ずつ表示せよ。

4.20
実行結果
  |  1  2  3  4  5  6  7  8  9
-------------------------------
1 |  1  2  3  4  5  6  7  8  9
2 |  2  4  6  8 10 12 14 16 18		と、九九表を作れ。

4.21
実行結果
長方形を作りましょう。
横幅：5
高さ：3
*****
*****
*****				と、横幅と高さを入力し*で長方形を作れ。

4.22
4.21を書き換えて、必ず横長の長方形にするアプリを作れ。

4.23
実行結果
何段ですか：5
*
**
***
****
*****

4.24
実行結果
何段ですか：5
    *
   ** 
  ***
 ****
*****

4.25
何段ですか：5
*****
****
***
**
*

4.26
実行結果
何段ですか：5
*****
 ****
  ***
   **
    *
	
4.27
実行結果
ピラミッドを作りましょう。
何段ですか：3
  *
 ***
*****

4.28
実行結果
長方形を作りましょう。
横幅：5
高さ：3
偶数：4
***** ***** ***** *****
***** ***** ***** *****
***** ***** ***** *****		と、4.21を改造せよ。

問題
5.1
要素数が5で要素型がint型である配列に対し、先頭要素から順に
0, 1, 2, 3, 4を代入し表示せよ。

5.2
5.1のコードをfor文で書き換えよ。

5.3
5.2のコードを書き換え、先頭から5, 4, 3, 2, 1を代入せよ。

5.4
要素数が11で要素型がdouble型である配列を用意し、
先頭から0.0, 0.1, 0.2, ..., 1.0を代入し、表示せよ。
	
5.5
5.3を書き換え、先頭から5.0, 4.0, 3.0, 2.0, 1.0で初期化せよ。

5.6
5人の学生の点数をputsで配列に読み込み、合計点と平均点を表示せよ。

5.7
実行結果
 va vb
-------
 15 15
 20 20
 30 30
  0  0		要素数が5で要素型がintである配列をそっくり別の
  0  0		配列にコピーし、それぞれの要素の値を表示せよ。

5.8
実行結果
5.7を書き換え、配列vaの要素を逆順にした物をvbにコピーせよ。

5.9
実行結果
vx[0]：58
vx[1]：32
vx[2]：17
vx[3]：46
vx[4]：22
vx[5]：73
vx[6]：69
vx[0] = 69
vx[1] = 73
vx[2] = 22
vx[3] = 46
vx[4] = 17	要素数が7で要素型がintの配列の全要素を
vx[5] = 32	逆順に並び替えよ。
vx[6] = 58

5.10
実行結果
vx[0]：58
vx[1]：32
vx[2]：17
vx[3]：46
vx[4]：22
vx[5]：73
vx[6]：69
vx[7]：59
vx[0] = 59
vx[1] = 69
vx[2] = 73
vx[3] = 22
vx[4] = 46
vx[5] = 17	5.9を書き換え、要素数8で要素型がintの配列の
vx[6] = 32	全要素を逆順に並び替えよ。
vx[7] = 58

5.11
実行結果
身長を入力してください。
1番：178
2番：175
3番：165
4番：179		要素数5で要素型intである配列に、
5番：172		5人の学生の身長を読み込んで、
平均身長：173.8	　その平均を求めよ

5.12
実行結果
身長を入力してください。
1番：178
2番：175
3番：165
4番：179		5.11の5人に対しNUMBERというマクロ名
5番：172		を与え、コードを書き換えよ。
平均身長：173.8

5.13
実行結果
体重を入力してください。
1番：52.5
2番：64.0
3番：58.3
4番：67.4
3番：62.0
最も重い人の体重：67.4
最も軽い人の体重：52.5		double型で表示。

5.14
実行結果
aの値 = 1.000000
bの値 = 1			と、表示せよ。変数aがdouble型、変数bが
					int型とする。a = b = 1.5の代入で、
					それぞれの値はどうなるか説明せよ。

5.15
実行結果
2行3列の行列a, bの和を求めて表示せよ。
a = {{1, 2, 3},
	 {4, 5, 6}}		実行結果
b = {{6, 3, 4},		7  5  7
	 {5, 1, 2}}		9  6  8

5.16
実行結果
行列x, yの積を求めるコードを書け。
x = {{1, 2, 3},
	 {4, 5, 6}}
y = {{1, 5},		実行結果
	 {5, 3},		35  14
	 {8, 1}}		77  41

5.17
実行結果
整数を入力してください。
No.1：35
No.2：28
No.3：9999					4.14を、入力値を配列に
合計は63で平均は31.50です。		格納するよう書き換えよ。

5.18
実行結果
v[0] = 10  vb[4] = 55  和 = 65
v[1] = 20  vb[3] = 66  和 = 86
v[2] = 30  vb[2] = 77  和 = 107
v[3] = 40  vb[1] = 88  和 = 128
v[4] = 50  vb[0] = 99  和 = 149
要素数が5で要素型がintの配列va, vbの各要素が適当に初期化
されている。vaは先頭側から、vbは末尾側から順に、
要素の値とさらに和を表示せよ。

問題
6.1
実行結果
2つの整数を入力してください。
整数1：37
整数2：28
小さい方の値は28です。
※2つのint型整数の小さい方の値を返す関数を作れ。

6.2
実行結果
3つの整数を入力してください。
整数1：37
整数2：28
整数2：48
最も小さい値は28です。
※3つのint型整数の最小値を返す関数を作れ。

6.3
実行結果
2つの整数を入力してください。
整数A：37
整数B：28
2つの整数の和は65です。
2つの整数の差は9です。
※2つの整数の和および差を求める関数を作れ。

6.4
実行結果
整数を入力してください：5
その数の三乗値は125です。
※int型整数の三乗値を返す関数を作れ。

6.5
実行結果
整数を入力してください：5
その数の四乗値は625です。
※int型整数の四乗値を返す関数を作れ。

6.6
実行結果
整数を入力してください：3
※警報をno回だけ発する関数を作れ。

6.7
※画面に「こんにちは。」と表示して改行する関数を作れ。

6.8
実行結果
長方形を作りましょう。
横幅：5
高さ：3
*****
*****
*****
※'*'をno個連続して表示する関数を作れ。

6.9
実行結果
平行四辺形を作りましょう。
横幅：5
高さ：3
  *****
 *****
*****
※文字chをno個連続して表示する関数を作れ。

6.10
実行結果
x[0] = 2
x[1] = 2
x[2] = 2
x[3] = 2
x[4] = 2
※要素数がnoであるint配列vcの全要素にxを代入する関数を作れ。

6.11
実行結果
5人の点数を入力してください。
[1] 英語：53
   数学：82
[2] 英語：49
   数学：35
[3] 英語：21
   数学：72
[4] 英語：91
   数学：35
[5] 英語：77
   数学：12
英語の最低点＝21
数学の最低点＝12
※要素数がnoであるint型の配列vcの要素の最小値を返す関数を作れ。

6.12
実行結果
vx[0]：17
vx[1]：38
vx[2]：52
vx[3]：41
vx[4]：63
配列vxの要素を逆順に並べかえました。
vx[0]：63
vx[1]：41
vx[2]：52
vx[3]：38
vx[4]：17
※要素数がnoであるint型配列vcの並びを逆順にする関数を作れ。

6.13
実行結果
vx[0]：17
vx[1]：38
vx[2]：52
vx[3]：41
vx[4]：63
配列vyに配列vxの要素を逆順に格納しました。
vy[0]：63
vy[1]：41
vy[2]：52
vy[3]：38
vy[4]：17
※要素数がnoであるint型配列v2の並びを逆順にしたものを配列v1に
 格納する関数を作れ。

6.14
実行結果
7  5  7
9  6  8
※2行3列の行列maとmbの和を、mcに格納する関数
void	mat_add(constt int	ma[2][3], const int	mb[2][3], int	mc[2][3]) {/*...*/}
を作れ。

6.15
実行結果
35 14
77 41
※2行3列の行列maと3行2列の行列mbの積を、2行2列の行列mcに格納する関数
void	mul(const int	ma[2][3], const int	mb[3][2], int	mc[2][2]) {/*...*/}
を作れ。

6.16
実行結果
[ 1番]国語：98
	数学：81
	英語；76
[ 2番]国語：67
	数学：72
	英語；74
[ 3番]国語：82
	数学：92
	英語；62
[ 4番]国語：72
	数学：65
	英語；95
[ 5番]国語：86
	数学：83
	英語；84

No 国語 数学 英語
---------------
1   98  81  76
2	67  72  74
3	82  92  62
4	72  65  95
5	86  83  84
---------------

【】最高点：98
	最低点：67
	平均点：81.0
【】最高点：92
	最低点：65
	平均点：78.6
【】最高点：95
	最低点：62
	平均点：78.2

各学生の3教科の平均点
1：85.0
2：71.0
3：78.7
4：77.3
5：84.3
※5人の学生の3教科の点数を2次元配列を使って処理するアプリ。

6.17
実行結果
5人の点数を入力してください。
1：68
2：72
3：60
4：81
5：43
合格者一覧表
----------
tensu[0] = 68
tensu[1] = 72
tensu[2] = 60
tensu[3] = 81
※5人の学生の点数を読み込んで、合格者(60点以上)の一覧を表示アプリ。

6.18
実行結果
ax sx fx
---------
 0  0  0
 0  1  1
 0  2  2
 0  3  3
 0  4  4
 0  5  5
 0  6  6
 0  7  7
 0  8  8
 0  9  9
---------
※自動記憶域期間・静的記憶域期間の変数の挙動確認アプリ。

6.19
実行結果例
a	  0		0	  0
b	  0		0	  0
c	124  -345   453
※静的記憶期間が与えられた配列の全要素が0で初期化される事の確認アプリ。

問題
7.1
実行結果
char				: 0~255
signed char			: -128~127
unsigned char		: 0~255
short int			: -32768~32767
unsigned short int	: 0~65535
int					: -32768~32767
unsigned int		: 0~65535
long int			: -2147483648~2147483647
unsigned long int	: 0~4294967295
※文字型と整数型の各型が表現できる数値の範囲を表示するアプリ。

7.2
実行結果
sizeof(char)				: 1
sizeof(signed char)			: 1
sizeof(unsigned char)		: 1
sizeof(short int)			: 2
sizeof(unsigned short int)	: 2
sizeof(int)					: 2
sizeof(unsigned int)		: 2
sizeof(long int)			: 4
sizeof(unsigned long)		: 4

7.3
実行結果
この処理系のchar型は符号無しで、0~255を表す事ができます。
※char型が符号付きか符号なしかを判定し、その表現範囲を表示するアプリ。

7.4
実行結果
0000000000000000	  0		0	  0
0000000000000001	  1		1	  1
0000000000000010	  2		2	  2
			(中略)
1111111111111110 177776 65534 FFFE
1111111111111111 177777 65535 FFFF
※unsigned型が表現できる全ての整数を、2進8進10進16進で表示するアプリ。

7.5
実行例
整数Aを入力してください：170
何ビットシフトしますか：4
A x () = 2720
A ÷ () = 10
A << 4 = 2720
A >> 4 = 10
符号無しで整数170の左右4ビットシフトは、2の4乗での乗算や除算と等しいです。
※符号無し整数を左右にシフトした値が、2の冪乗での乗算や除算と等しくなる事の確認アプリ。

7.6
実行結果
非負の整数を入力してください：12345
何ビット回転しますか：4
回転前 = 0011000000111001
右回転 = 1001001100000011
左回転 = 0000001110010011
※符号無し整数xを右にnビット回転した値を返す関数rrotateと、左にnビット回転した
値を返すlrotateを作れ。
unsigned	rrotate(unsigned	x, int	n) {/*...*/}

7.7
実行結果
符号無し整数xのposビット目を操作します。
非負の整数xを入力してください：12345
操作するビット位置posを入力してください：5
x				= 0011000000111001
set(x, pos)		= 0011000000111001
reset(x, pos)	= 0011000000101001
inverse(x, pos)	= 0011000000101001
※符号無し整数xのposビット目を、1にした値を返す関数set, 0にした値を返す関数reset、
反転した値を返す関数inverseを作成せよ。
unsigned	set(unsigned	x, int	pos) {/*...*/}

7.8
実行結果
符号無し整数xのposビット目からno個のビットを操作します。
非負の整数xを入力してください：12345
操作するビット位置posを入力してください：5
操作するビット数noを入力してください：3
x				= 0011000000111001
set(x, pos)		= 0011000001111001
reset(x, pos)	= 0011000000001001
inverse(x, pos)	= 0011000001001001
※符号無し整数xのposビット目からn個のビットを、1にした値を返す関数set_n、
0にした値を返す関数reset_n、反転した値を返す関数inverse_nを作成せよ。

7.9
実行結果
unsigned型の最大値：65535
x = 65534
x + 3 = 1
x * 2 = 65532
※符号無し整数に対する算術演算が、オーバフローを起こさない事を確認するアプリ。

7.10
実行結果
	x		x * x
------------------
0.000000	0.000000
0.010000	0.000100
0.020000	0.000400
0.020000	0/000900
		(中略)
0.990000	0.980100
1.000000	1.000000
※float型の変数xを0.0から1.0まで0.01ずつ増やし、xの値とその2乗値を表示するアプリ。

7.11
実行結果
  x		sqrt(x)
---------------
0.00	0.000
0.01	0.100
0.02	0.141
0.03	0.173
	(中略)
0.99	0.995
1.00	1.000
※0.00から1.0まで0.01ずつ増やしながら、その値とその平方根を表示するアプリ。

7.12
実行結果
vc[0] = 0
vc[1] = 0
vc[2] = 0
vc[3] = 0
vc[4] = 0
vc[5] = 0
vc[6] = 0
vc[7] = 0
vc[8] = 0
vc[9] = 0
※sizeof演算子によって配列の要素数を求めるとともに、全ての要素に0を代入して表示するアプリ。

問題
8.1
実行結果
整数を入力してください：4
その数の二乗は16で三乗は64です。
実数を入力してください：2.5
その数の二乗は6.250000で
三乗は15.625000です。
※値xの二乗値および三乗値を返す関数形式マクロを作れ。

8.2
実行結果
2つの値を入力してください。
整数1：3
整数2：5
それらの差は2です。
※2つの値xとyの差を返す関数形式マクロを作れ。

8.3
2つの値xとyの大きい方の値を返す関数形式マクロは以下のように定義できる。
#define	max(x, y) ((x) > (y) ? (x) : (y))
このマクロを利用して、4つの値a, b, c, dの最大値を求める
max(max(a, b), max(c, d))
および
max(max(max(a, b), c), d)
がどのように展開されるかを示し、考察を加えよ。

8.4
実行結果
3つの整数を入力せよ。
整数A：5
整数B：10
AとBの値を交換
整数A＝10
整数B＝5
※type型の2つの値を交換する関数形式マクロ
swap(type, a, b)
を定義せよ。例えばint型の変数x, yの値が5と10である時、
swap(int, x, y)を呼び出した後は、x,yには10と5が格納されて
いなければならない。

8.5
列挙体。性別や季節などを表す列挙体を自由に定義し、それを用いた
アプリを作れ。

8.6
実行結果
整数入力してください：3
その数の階乗は6です。
※整数nの会場を返す関数を再帰で定義せよ。
int	factorial(int	n) {/*...*/}

8.7
実行結果
変数を入力してください：3
その数の階乗は6です。
※再帰を用いず関数を定義せよ。

8.8
実行結果
異なるn個からr個の整数を取り出す組み合わせの数を求めます。
n：5
n：3
組み合わせの数は10です。
※異なるn個の関数を取り出す組み合わせの数 C を求める関数を作れ。
								  n	r
int	combination(int	n, int	r){ /* ... */ }

8.9 実行結果 
1を1軸から3軸へ移動 
2を1軸から2軸へ移動 
1を1軸から2軸へ移動 
3を1軸から3軸へ移動 
1を1軸から1軸へ移動 
2を1軸から3軸へ移動 
1を1軸から3軸へ移動
※第1軸に上が小さくしたが大きくなるように重ねられている円盤を
第3軸に移す手順を示すプログラムを作成せよ。

8.10 実行結果 
3.14159265358979323846 
数字の出現回数 
'0' : 0 
'1' : 2 
'2' : 2 
'3' : 3 
'4' : 2 
'5' : 3 
'6' : 2 
'7' : 1 
'8' : 2
'9' : 3
※標準入力に現れた数学文字の出現回数を表示するプログラムを作成せよ。

8.11 
実行結果 
3.14159265358979323846 
数字の出現回数
'0' :
'1' : **
'2' : **
'3' : ***
'4' : **
'5' : ***
'6' : **
'7' : *
'8' : **
'9' : *** 
※前問をアスタリスクで表せ。

8.12 
実行結果
3.14159265358979323846 
数字の出現回数
           *     *           *
     *  *  *  *  *  *     *  *
     *  *  *  *  *  *  *  *  *
  0  1  2  3  4  5  6  7  8  9

8.13 
実行結果
Hello !
Hello !
This is a pen.
This is a pen.
※標準入力から読み込んだ文字を、putchar関数を使ってそのまま表示せよ。

8.14 実行結果
Hello !
This is a pen.
行数 : 2
※標準入力に現れた行数をカウントするプログラムを完成せよ。

9.1 実行結果
文字列strはStringです
※要素数が7で型がcharの配列に対し、文字列 "String"を 代入格納表示せよ。

9.2 実行結果
文字列strはStringです
※前問を書き換え、代入でなく初期化格納せよ。

9.3 実行結果
文字列strはABCです
※前問の配列strの宣言を;
char str[] = "ABC\0DEF";

9.4
実行結果
str = ABC
文字列strをから文字列にしました
str =
※初期化された文字列strをから文字列にするには、どう捜査すべきか示せ。
char	str[] = "ABC";

9.5
実行結果
お名前は: Shibata
初めまして、Shibataさん！！
※名前を示す文字列を読み込んで、挨拶をするプログラムを作れ。

9.6
一定時間間隔で、名前を右から左へとテロップのように流し表示する
プログラムを作れ。表示は同一業内に行うものとし、1文字ずつずらし
ながら循環させよ。

9.7
実行結果
cs[0] = "Lisp"
cs[1] = "C++"
cs[2] = "Ada"
※文字列の配列をchar型の2次元配列として実現し、初期値として入れられた各文字列を
表示するプログラムを作れ。

9.8
実行結果
cs[0]: "BS"
cs[1]: "Window"
cs[2]: "holiday"
cs[0]: "BS"
cs[1]: "Window"
cs[2]: "holiday"
※文字列の配列をchar型の2次元配列として実現し、各要素に標準入力から読み込んだ文字列を
表示するプログラムを作れ。

9.9
実行結果
英文字を入力してください: E
それは英大文字の5番目です
※文字列strの中に、文字cが含まれて入れば()、その添字を返し、含まれていなければ
-1を返す関数を作れ
int	str_char(const char	str[], int	c) { /*...*/ }

9.10
実行結果
文字列を入力してください: opqrst
検索する文字を入力してください: r
その文字は1個含まれています
※文字列strの中に、文字cが含まれている個数()を返す関数を作れ。
int	str_chnum(const char	str[], int	c) { /*...*/ }

9.11
実行結果
文字列を入力してください: SEC
SEC
※配列strに格納されている文字列を表示する関数を作れ。putcharを使用。
void	put_string(const char	str[]) {/ *...* /}

9.12
実行結果
文字列を入力してください: SEC
SEC
※前問をprintfを使って書け。

9.13
実行結果
文字列を入力してください: String
何回表示しますか: 3
StringStringString
※文字列strをno回だけ連続して表示する関数を作れ。
void	put_stringn(const char	str[], int	no) {/*...*/}

9.14
実行結果
文字列を入力してください: SEC
逆から読むとCESです
※前問を元に、文字列を逆表示する関数put_rstringを作れ。

9.15
実行結果
str = SEC
文字列strを逆順に並べ替えました
str = CES
※文字列strを逆順に格納する関数を作れ。
void	rev_string(char	str[]) {/*...*/}

9.16
実行結果
st[0] = "Lisp"
st[1] = "Ada"
st[2] = "C++"
※文字列の配列とその要素数nを受け取り、格納されている文字列を表示する関数を作れ。
void	put_strary(const char	st[][6], int	n) {/*...*/}

9.17
実行結果
str = ABC
文字列strをから文字にしました。
str =
※文字列strをから文字にする関数を作れ。
void	null_string(char	str[]) {/*...*/}

9.18
実行結果
文字列を入力してください: AB1C9
数字文字を削除しました
str = ABC
※文字列str内のすべての数字文字を削除する関数を作れ。
void	del_digit(char	str[]) {/*...*/}

10.1
実行結果
nx	 のアドレス: FFCD
dx	 のアドレス: FFC2
vc[0]のアドレス: FFC0
vc[1]のアドレス: FFC2
vc[2]のアドレス: FFC4
※静的記憶領域が与えられたオブジェクトのアドレスを表示するプログラムを作れ。

10.2
実行結果
2つの整数を入力してください
整数A: 24
整数B: 45
これらの値を交換しました
整数Aの値は45です
整数Bの値は24です
※2つの変数の値を、それぞれを指すポインタを用いて交換せよ。

10.3
実行結果
2つの整数を入力してください
整数A: 45
整数B: 20
和は65です
差は25です
積は900です
※2つの整数n1とn2の和・差・積をsum, diff, mulが指す変数に格納する関数を作れ。
void	sum_diff_mul(int	n1, int	*sum, int	*diff, int	*mul){/*...*/}

10.4
西暦y年m月d日の《前の日》《次の日》の日付を求めてセットする関数を作れ。閏年も判別せよ。
void	yesterday(int	*y, int	*m, int	*d) {/*...,*/}
void	tomorrow(int	*y, int	*m, int	*d) {/*...,*/}

10.5
実行結果(1)
2つの整数を入力してください
整数A: 57
整数B: 21
これらの値を昇順に並べました
整数Aは21です
整数Bは57です
実行結果(2)
2つの整数を入力してください
整数A: 37
整数B: 49
これらの値を昇順に並べました
整数Aは37です
整数Bは49です
※2つのint型整数を昇順に並べる関数を作れ。
void	sort2(int	*n1, int	*n2){/*...*/}

10.6
実行結果
3つの整数を入力してください
整数A: 32
整数B: 48
整数C: 15
これらの値を昇順に並べました
整数Aは15です
整数Bは32です
整数Cは48です
3つの整数を昇順に並べ替える関数を作れ。
void	sort3(int	*n1, int	*n2, int	*n3){/*...*/}

10.7
実行結果
vc[0]	= 10	0[vc]	= 10	*(vc + 0) = 10	*(0 + vc) = 10
vc[1]	= 20	1[vc]	= 20	*(vc + 1) = 20	*(1 + vc) = 20
vc[2]	= 30	2[vc]	= 30	*(vc + 2) = 30	*(2 + vc) = 30
vc[3]	= 40	3[vc]	= 40	*(vc + 3) = 40	*(3 + vc) = 40
vc[4]	= 50	4[vc]	= 50	*(vc + 4) = 50	*(4 + vc) = 50

*(ptr + 0) = 10	 *(0 + ptr) = 10	ptr[0] = 10	 0[ptr] = 10
*(ptr + 1) = 20	 *(1 + ptr) = 20	ptr[1] = 20	 1[ptr] = 20
*(ptr + 2) = 30	 *(2 + ptr) = 30	ptr[2] = 30	 2[ptr] = 30
*(ptr + 3) = 40	 *(3 + ptr) = 40	ptr[3] = 40	 3[ptr] = 40
*(ptr + 4) = 50	 *(4 + ptr) = 50	ptr[4] = 50	 4[ptr] = 50
※intへのポインタであるptrが、要素数が5で要素型がint型である配列vcの先頭要素vc[0]
を指している。ptrおよびvcに間接演算子や添字演算子を適用して、配列の要素の値を
表示するプログラムを作れ。

10.8
実行結果
ptr	  ==  vc	: 1
ptr	  == &vc[0] : 1
ptr	  == &vc[1] : 0
&vc[1] < &vc[2] : 1
&vc[2] < vc		: 2
※配列内の要素を指すポインタに対して比較や減算を行うプログラムを作れ。

10.9
実行結果
ary[0] = 1
ary[1] = 2
ary[2] = 3
ary[3] = 0
ary[4] = 0
※要素型がint型である配列を受け取って、先頭3つの要素に1, 2, 3を順に代入する関数を作れ。

11.1
実行結果
ARY
PTR
str = "ARY"
ptr = "PTR"
※char型の配列strに文字列"ARY"を格納し、charへのポインタptrが文字列リテラル
"PTR"を指すようにし、それぞれが格納あるいは指している文字列を表示するプログラムを作れ。

11.2
実行結果
st[0] = "Lisp"
st[1] = "C"
st[2] = "Ada"
pt[0] = "ABCD"
pt[1] = "A"
pt[2] = "ABC"
※《配列で実現した文字列》の配列と《ポインタで実現した文字列》の配列を表示する
プログラムを作れ。

11.3
実行結果
文字列を入力してください: SEC
SEC
※9.11put_stringと同じ動作をする関数を、添字演算子を使わず書け。

11.4
英大文字を入力してください: E
EFGHIJKLMNOPQRSTUVWXYZ
※文字列strの中に、文字cが含まれていれば、その文字へのポインタを返し、含まれて
いなければNULLを返す関数を作れ。
char	*str_chr(const char	*str, int	c) {/*...*/}

11.5
文字列を入力してください: opqrR
検索する文字を入力してください: r
その文字は1個含まれています。
※文字列strの中に、文字cが含まれている個数を返す関数を添字演算子を使わず作れ。
int	str_chnum(const char	*str, int	c){/*...*/}

11.6
実行結果
文字列を入力してください: aBcDEf
大文字: ABCDEF
小文字: abcdef

11.7
実行結果
文字列を入力してください: AB1C9
数字文字を削除しました。
str = ABC
※文字列str内のすべての数字文字を削除する関数を作れ。
void	del_digit(char	*str) {/*...*/}

11.8
実行結果
文字列を入力してください: SEC
逆から読むとCESです
※文字列を後ろから逆に表示する関数を、添字演算子を使わず書け。
void	put_rstring(const char	*st){/*...*/}

11.9
実行結果
文字列を入力してください: AC
文字列を入力してください: ACE
それらの文字列は異なります
※文字列s1と文字列s2が等しければ1を、そうでなければ0を返す関数を作れ。
int	str_equal(const char	*s1, const char	*s2){/*...*/}

11.10
※ライブラリ関数atoi, atol, atofと同じ動作をする関数を作れ。
int	strtoi(const char	*nptr){/*...*/}
int	strtol(const char	*nptr){/*...*/}
int	strtof(const char	*nptr){/*...*/}

12.1
実行結果
sa.x = 50
sa.y = 99999999
sa.z = 3.140000
※int, long, double型の3つのメンバを持つ構造体xyzを定義し、各メンバに
値を代入して表示を行うプログラムを作れ。

12.2
実行結果
sa.x = 50
sa.y = 99999999
sa.z = 3.140000
※前問を書き換え、各メンバへの値の設定を代入でなく初期化によって行え。

12.3
実行結果
pt->x = 50
pt->y = 99999999
pt->z = 3.140000
※前問までの構造体xyz型のオブジェクトと、それを指すポインタを定義し、
ポインタが指すオブジェクトの各メンバを表示せよ。

12.4
実行結果
sa.x = 50
sa.y = 99999999
sa.z = 3.140000
※前問までの構造体xyz型の各メンバに値を格納する関数を作れ。
void	set_xyz(struct xyz	*p, int	x, long	y, double	z){/*...*/}

12.5
実行結果
sa.x = 50
sa.y = 99999999
sa.z = 3.140000
※前問を書き換え、構造体に対してタグ名でなくtypedef名を与えよ。名前はxyzとする。

12.6
実行結果
sa.x = 50
sa.y = 99999999
sa.z = 3.140000
※前問のxyz型の構造体の各メンバに値を代入し、その構造体を返す関数を作れ。
xyz	XYZof(int	x, int	y, int	z){/*...*/}

12.7
実行結果
今日は1998年11月18日(水)です
※今日の日付と曜日を表示する関数を作れ。
void	put_date(void){/*...*/}

12.8
実行結果
現在の時刻は03時05分25秒です
※現在の時刻を表示する関数を作れ。
void	put_time(void){/*...*/}

12.9
実行結果
日付を入力してください
年: 1963
月: 11
日: 18
西暦: 1963年11月18日
元号: 昭和38年11月18日
※身の周りを見渡して、構造体で表現できるものを見つけてそれをプログラムせよ。

12.10
実行結果
左上隅: (0, 0)
右下隅: (0, 0)
面積: 0
座標を変更しますか【Yes...1 / No...0】1
左上隅
X座標: 100
Y座標: 200
右下隅
X座標: 80
Y座標: 250
左上隅は右下隅より小さくしてください
左上隅: (0, 0)
右下隅: (0, 0)
面積: 0
座標を変更しますか【Yes...1 / No...0】1
左上隅
X座標: 100
Y座標: 200
右下隅
X座標: 300
Y座標: 400
左上隅: (100, 200)
右下隅: (300, 400)
面積: 40000
座標を変更しますか【Yes...1 / No...0】0
※XおよびY座標の対によって点を表す構造体Point、左上隅座標と右下隅座標を
表す2つのPointの対によって矩形を表す構造体Rectを定義し、
それを活用する簡単なプログラムを作れ。

13.1
実行結果
ファイル名: abc.txt
ファイルをオープンできません
※キーボードからファイル名を読み込んで、そのファイルをオープンするプログラムを作れ。

13.2
実行結果
ファイル名: abc.txt
そのファイルは存在します
※キーボードからファイル名を読み込んで、そのファイルが存在すれば
『そのファイルは存在します』と表示し、そうでなければ、
『そのファイルは存在しません』と表示するプログラムを作れ。

13.3
Aiba	160.0	59.3
Kurata	162.0	51.6
Aiba	170.0	60.7
Aiba	175.0	83.9
Aiba	175.0	72.5
Aiba	182.0	76.5
--------------------
平均	 170.7	 67.4
※右に示すファイル"hw.dat"に保存されている名前、身長、体重のデータを
1件ずつ読み込んで表示し、最後に平均身長と体重を表示せよ。
個人データは、身長順にソートすること。

13.4
実行結果
書き込むファイル名: person.dat
名前: Yamato
身長: 175
体重: 65
続けますか (Yes...1 / No...0)
名前: Musashi
身長: 180
体重: 70
続けますか (Yes...1 / No...0)

13.5
実行結果
本プログラムを実行するのは初めてですね
現在の気分は: 最高!!
実行結果
前回は年月日時分秒で、気分は最高!!でした
現在の気分は: まあまあ
※プログラムの実行が初めてであればその旨をメッセージ表示し、
2回目以降であれば前回に実行した時の日付時刻と気分を表示せよ。

13.6
実行結果
ファイル名: list1306.c
そのファイルは30行です
※キーボードからファイル名を読み込み、そのファイル中の行数をカウントして、
画面に表示せよ。

13.7
実行結果
ファイル名
数字文字の出現回数
'0' : 7
'1' : 2
'2' : 0
中略
'9' : 1
※キーボードからファイル名を読み込み、そのファイル中の数字の個数をカウント
して表示するプログラムを作れ。

13.8
※コピー元ファイル名、コピー先ファイル名をキーボードから読み込んで、ファイルの内容
を画面に表示しながらコピーするプログラムを作れ。

13.9
※コピー元ファイル名、コピー先ファイル名をキーボードから読み込んで、
全ての英小文字を英大文字に変換しながらコピーするプログラムを作れ。

13.10
※コピー元ファイル名、コピー先ファイル名をキーボードから読み込んで、
全ての英大文字を英小文字に変換しながらコピーするプログラムを作れ。

13.11
※要素数がdouble型で要素数が10である配列の全要素の値を読み書きする
プログラムを作れ。

13.12
※プログラムの実行が初めてであればその旨をメッセージ表示し、
2回目以降であれば前回に実行した時の日付時刻と気分を表示せよ。
日付・時刻をstruct tm型の値として直接バイナリファイルに読み書きせよ。
